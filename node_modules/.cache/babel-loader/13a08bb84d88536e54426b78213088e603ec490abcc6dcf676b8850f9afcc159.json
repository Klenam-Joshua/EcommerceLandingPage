{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\REACT-PROJECTS\\\\e-commerce_site\\\\src\\\\Components\\\\app.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport PageHeader from \"./Navbar/Header\";\n//import Button from \"./ImageGallery/Gallery\";\nimport Gallery from \"./ImageGallery/Gallery\";\nimport \"../assets/styles/global.css\";\nimport { useState } from \"react\";\nimport { createRenderer } from \"react-dom/test-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  function getCartItems(url, price, productsCount, productId, imageId) {\n    if (!cartItems.length < 1) {\n      let updatedCartItems = cartItems.map(images => {\n        if (images.productId === productId) {\n          return {\n            ...images,\n            productsCount: productsCount\n          };\n        }\n      });\n      setCartItems(updatedCartItems);\n    } else {\n      let cartContent = {\n        url: url,\n        price: price,\n        productsCount: productsCount,\n        productId: productId,\n        imageId: imageId\n      };\n      setCartItems([...cartItems, cartContent]);\n      console.log(cartItems);\n    }\n  }\n  function deleteItem(productId) {\n    let elementIndex;\n    //==error to handle\n    //because  the images has the same id, when the array is iterated \n    // the last 'element'  index which has the same id as any other element is assinged to elementIndex\n    //solution  let user add the same product to cart only once\n    //if he/she want to add the same product the second time let only the itemsCount be updated\n    let newCart = cartItems.map((item, index) => {\n      if (productId === item.productId) {\n        // elementIndex = index;\n        return; //item;\n      } else {\n        return item;\n      }\n    });\n    newCart.splice(elementIndex, 1);\n    setCartItems(newCart);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(PageHeader, {\n      itemCount: cartItems,\n      listCount: cartItems.length,\n      removeItem: deleteItem,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Gallery, {\n            addtoCart: getCartItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 14\n  }, this);\n}\n_s(App, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","PageHeader","Gallery","useState","createRenderer","jsxDEV","_jsxDEV","App","_s","cartItems","setCartItems","getCartItems","url","price","productsCount","productId","imageId","length","updatedCartItems","map","images","cartContent","console","log","deleteItem","elementIndex","newCart","item","index","splice","children","itemCount","listCount","removeItem","path","element","addtoCart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/REACT-PROJECTS/e-commerce_site/src/Components/app.js"],"sourcesContent":["import {BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport PageHeader from \"./Navbar/Header\";\r\n//import Button from \"./ImageGallery/Gallery\";\r\nimport Gallery from \"./ImageGallery/Gallery\"\r\nimport \"../assets/styles/global.css\";\r\nimport { useState } from \"react\";\r\nimport { createRenderer } from \"react-dom/test-utils\";\r\n\r\n\r\nexport default function App(){\r\n        const [cartItems, setCartItems] = useState([])\r\n     function getCartItems(url,price,productsCount,productId,imageId){\r\n          if(!cartItems.length < 1){\r\n             let updatedCartItems =   cartItems.map((images)=>{\r\n                        if(images.productId === productId){\r\n                             return  {...images,productsCount:productsCount}\r\n                              \r\n                        }\r\n                    })\r\n\r\n                    setCartItems(updatedCartItems);\r\n          }\r\n          else{\r\n                 let cartContent = {url:url, price:price, productsCount:productsCount, productId:productId,imageId:imageId};\r\n                 setCartItems([...cartItems,cartContent]);\r\n                  console.log(cartItems)\r\n          }\r\n }\r\n\r\n function deleteItem(productId){\r\n        let elementIndex ;\r\n        //==error to handle\r\n        //because  the images has the same id, when the array is iterated \r\n        // the last 'element'  index which has the same id as any other element is assinged to elementIndex\r\n        //solution  let user add the same product to cart only once\r\n        //if he/she want to add the same product the second time let only the itemsCount be updated\r\n             let newCart = cartItems.map((item,index)=>{\r\n                    if(productId === item.productId){\r\n                            // elementIndex = index;\r\n                             return //item;\r\n                    }\r\n                    else{\r\n                        return item;\r\n                    }\r\n             })\r\n             \r\n         newCart.splice(elementIndex,1)\r\n       setCartItems(newCart)\r\n }\r\n      return (\r\n             <BrowserRouter>\r\n                     <PageHeader itemCount={cartItems}  listCount={cartItems.length}   removeItem={deleteItem}>\r\n                             <Routes>\r\n                                       <Route  path=\"/\"  element={<Gallery  addtoCart={getCartItems}/>} />\r\n                                       \r\n                             </Routes>\r\n                     </PageHeader>\r\n             </BrowserRouter>\r\n      )\r\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC9D,OAAOC,UAAU,MAAM,iBAAiB;AACxC;AACA,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAO,6BAA6B;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtD,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACjD,SAASQ,YAAYA,CAACC,GAAG,EAACC,KAAK,EAACC,aAAa,EAACC,SAAS,EAACC,OAAO,EAAC;IAC3D,IAAG,CAACP,SAAS,CAACQ,MAAM,GAAG,CAAC,EAAC;MACtB,IAAIC,gBAAgB,GAAKT,SAAS,CAACU,GAAG,CAAEC,MAAM,IAAG;QACtC,IAAGA,MAAM,CAACL,SAAS,KAAKA,SAAS,EAAC;UAC7B,OAAQ;YAAC,GAAGK,MAAM;YAACN,aAAa,EAACA;UAAa,CAAC;QAEpD;MACJ,CAAC,CAAC;MAEFJ,YAAY,CAACQ,gBAAgB,CAAC;IACxC,CAAC,MACG;MACG,IAAIG,WAAW,GAAG;QAACT,GAAG,EAACA,GAAG;QAAEC,KAAK,EAACA,KAAK;QAAEC,aAAa,EAACA,aAAa;QAAEC,SAAS,EAACA,SAAS;QAACC,OAAO,EAACA;MAAO,CAAC;MAC1GN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAACY,WAAW,CAAC,CAAC;MACvCC,OAAO,CAACC,GAAG,CAACd,SAAS,CAAC;IAC9B;EACT;EAEA,SAASe,UAAUA,CAACT,SAAS,EAAC;IACvB,IAAIU,YAAY;IAChB;IACA;IACA;IACA;IACA;IACK,IAAIC,OAAO,GAAGjB,SAAS,CAACU,GAAG,CAAC,CAACQ,IAAI,EAACC,KAAK,KAAG;MACnC,IAAGb,SAAS,KAAKY,IAAI,CAACZ,SAAS,EAAC;QACxB;QACC,OAAM,CAAC;MAChB,CAAC,MACG;QACA,OAAOY,IAAI;MACf;IACP,CAAC,CAAC;IAEND,OAAO,CAACG,MAAM,CAACJ,YAAY,EAAC,CAAC,CAAC;IAChCf,YAAY,CAACgB,OAAO,CAAC;EAC3B;EACK,oBACOpB,OAAA,CAACR,aAAa;IAAAgC,QAAA,eACNxB,OAAA,CAACL,UAAU;MAAC8B,SAAS,EAAEtB,SAAU;MAAEuB,SAAS,EAAEvB,SAAS,CAACQ,MAAO;MAAGgB,UAAU,EAAET,UAAW;MAAAM,QAAA,eACjFxB,OAAA,CAACP,MAAM;QAAA+B,QAAA,eACGxB,OAAA,CAACN,KAAK;UAAEkC,IAAI,EAAC,GAAG;UAAEC,OAAO,eAAE7B,OAAA,CAACJ,OAAO;YAAEkC,SAAS,EAAEzB;UAAa;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEpE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAE7B;AAAChC,EAAA,CAlDuBD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}